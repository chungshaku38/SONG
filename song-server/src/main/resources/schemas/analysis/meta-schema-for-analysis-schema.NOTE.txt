The issue with this metaschema is that, the input json below:

{
    "$schema": "http://json-schema.org/draft-07/schema#",
    "$id": "http://json-schema.org/draft-07/schema#",
    "title": "Core schema meta-schema",
    "properties" : {
      "experiment" : {
        "type" : "object",          
        "properties" : {
          "name" : {
            "type" : "object"
          }
        }
      },
      "analysisTypeName" : {
        "type" : "string"
      },
      "test" : {
        "type" : "array",
         "items" : {"type" : ""}
      }
     
    },
    "required" : ["analysisTypeName"]
      
      
}

which is considered the analysis-schema, does NOT invalidate when "name" is an object. The point is to defend against arbirtarily nested fields, and although "analysisTypeName" invalidates properly when "type" is set to object, the "experiment" field does not. Some more experimentation needs to be made with the use of "additionalProperties" and getting it to use the root schema which would otherwise invalidate anything that uses "simpleTypes" = "object"."""


