version: '3.2'
services:
  base_java:
    build: ./base_java
  base_db:
    build: ./base_db
  server:
    build: ./server
    volumes:
      - "./logs/server_logs:/opt/dcc/server_logs"
    depends_on:
      - base_java
      - db 
      - id
    ports:
      - "8080:8080"
  client:
    build: ./client
    volumes:
      - "./data/client:/opt/dcc/data"
    depends_on:
      - base_java
      - server
  auth:
    build: ./auth
    volumes:
      - "auth-data:/opt/dcc/auth_data"
    ports:
      - "9090:9090"
  db:
    build: ./db
    ports:
      - "15432:5432"
    volumes:
      - "db-data:/var/lib/postgresql/data/pgdata"
      - "./logs/db_logs:/opt/dcc/db_logs"
    depends_on:
      - base_db
  storage-client:
    build: ./storage-client
    depends_on:
      - storage-server
      - server
    volumes:
      - "./data/storage-client:/opt/dcc/data"

  minio:
    image: minio/minio:latest
    network_mode: host
    volumes:
      - "./data/minio:/opt/dcc/data"
    environment:
      MINIO_ACCESS_KEY: minio
      MINIO_SECRET_KEY: minio123
    expose:
      - "9001"
    ports:
      - "9001:9000"
    deploy:
        restart_policy:
            delay: 10s
            max_attempts: 10
            window: 60s
    command: server /opt/dcc/data
  storage-server:
    build: ./storage-server
    depends_on:
      - base_java
      - minio
      - server
    ports:
      - "5000:5000"
    volumes:
      - "./logs/storage_server_logs:/opt/dcc/storage_server_logs"
  id:
    build: ./id
    depends_on:
      - base_java
      - id-db
    volumes:
      - "./logs/id_logs:/opt/dcc/id_logs"
    ports:
      - "8444:8444"
      - "8443:8443"
  id-db:
    build: ./id-db
    volumes:
      - "id-db-data:/var/lib/postgresql/data/pgdata"
      - "./logs/id_db_logs:/opt/dcc/id_db_logs"
    depends_on:
      - base_db

volumes:
    db-data: {}
    id-db-data: {}
    auth-data: {}
